<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Steven Casagrande</title>
    <link>https://steven.casagrande.io/tags/bash/</link>
    <description>Recent content in Bash on Steven Casagrande</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://steven.casagrande.io/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Travis CI and If Statements</title>
      <link>https://steven.casagrande.io/posts/2016/travis-ci-and-if-statements/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://steven.casagrande.io/posts/2016/travis-ci-and-if-statements/</guid>
      <description>&lt;p&gt;So the other day at work (seems to be a trend in my posts) I was investigating a problem that we noticed with one of our project&amp;rsquo;s TravisCI builds. Specifically, we found that a step under &lt;code&gt;script&lt;/code&gt; had failed, but the overall build still passed! Very curious problem indeed, and of course needs to be immediately fixed.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s take a look at a similar offending code block:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;if [ ${TRAVIS_SECURE_ENV_VARS} = &amp;#34;true&amp;#34; ]; then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          docker run project-container &amp;#34;npm run test&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          docker run project-container &amp;#34;npm run test:lint&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          docker-compose run ui-tests;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          npm run test;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          npm run test:lint;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      fi&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Automatically Building Docker Containers With Different Base Image Tags</title>
      <link>https://steven.casagrande.io/posts/2016/automatically-building-docker-containers-with-different-base-image-tags/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://steven.casagrande.io/posts/2016/automatically-building-docker-containers-with-different-base-image-tags/</guid>
      <description>&lt;div class=&#34;notice warning&#34;&gt;&#xA;  &lt;div class=&#34;notice-title&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-exclamation-triangle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Warning&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;notice-content&#34;&gt;&lt;p&gt;This post was written in 2016 and the ecosystem has matured much since then.&lt;/p&gt;&#xA;&lt;p&gt;Proceed with caution!&lt;/p&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;At work I recently added a Dockerfile to one of our accessory tools, and set it up with Jenkins to build on a nightly basis. This build occurs nightly as opposed to on new master commits to ensure that the resulting container always has the latest versions of all its dependencies (including node).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
